"use client";import{useFocusRing as A}from"@react-aria/focus";import{useHover as E}from"@react-aria/interactions";import{useMemo as P}from"react";import{useId as g}from'../../hooks/use-id.js';import{useDisabled as v}from'../../internal/disabled.js';import{useProvidedId as F}from'../../internal/id.js';import{forwardRefWithAs as _,mergeProps as R,render as D}from'../../utils/render.js';import{useDescribedBy as h}from'../description/description.js';import{useLabelledBy as L}from'../label/label.js';let H="textarea";function X(a,i){var s;let n=g(),d=F(),T=v(),{id:p=d||`headlessui-textarea-${n}`,disabled:e=T||!1,invalid:o=!1,...u}=a,f=L(),m=h(),{isFocusVisible:r,focusProps:b}=A({within:!0,autoFocus:(s=a.autoFocus)!=null?s:!1}),{isHovered:t,hoverProps:y}=E({isDisabled:e!=null?e:!1}),x=R({ref:i,id:p,"aria-labelledby":f,"aria-describedby":m,"aria-invalid":o?"":void 0,disabled:e||void 0},b,y),c=P(()=>{var l;return{disabled:e,invalid:o,hover:t,focus:r,autofocus:(l=a.autoFocus)!=null?l:!1}},[e,o,t,r,a.autoFocus]);return D({ourProps:x,theirProps:u,slot:c,defaultTag:H,name:"Textarea"})}let J=_(X);export{J as Textarea};
